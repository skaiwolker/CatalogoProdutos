@page "/add"

@using CatalogoProdutos.Models
@inject NavigationManager NavigationManager
@inject CatalogoProdutos.Services.Interface.IProdutoService ProdutoService;

<h1>Cadastrar Produto</h1>

<EditForm Model="produto" OnValidSubmit="AddProduto">
    <div class="form-group mb-3">
        <label for="produtoNome">Nome</label>
        <InputText @bind-Value="produto.Nome" class="form-control" id="produtoNome" />
    </div>

    <div class="form-group mb-3">
        <label for="produtoPreco">Preço</label>
        <InputText @bind-Value="produto.Preco" class="form-control" id="produtoPreco" />
    </div>

    <div class="form-group mb-3">
        <label for="produtoDescricao">Descrição</label>
        <InputTextArea @bind-Value="produto.Descricao" class="form-control" id="produtoDescricao" />
    </div>

    <div class="form-group mb-3">
        <label for="produtoQuantidade">Quantidade</label>
        <InputNumber @bind-Value="produto.Quantidade" class="form-control" id="produtoQuantidade" />
    </div>

    <div class="form-group mb-3">
        <label for="produtoTipo">Tipo</label>
        <InputSelect @bind-Value="produto.Tipo" class="form-control" id="produtoTipo">
            <option value=""></option>
            <option value="Orgânico">Orgânico</option>
            <option value="Não orgânico">Não orgânico</option>
        </InputSelect>
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">Cadastrar</button>

</EditForm>

@code {
    Produto produto = new();

    async Task AddProduto()
    {
        produto.GenerateNewProduto();

        await ProdutoService.Add(produto);

        NavigationManager.NavigateTo("/");
    }
}
